---
import "../styles/global.css";
import SearchIcon from "../assets/icons/search-icon.svg";
import SmileIcon from "../assets/icons/smile.svg";
import XMarkIcon from "../assets/icons/x-mark-icon.svg";
import HamburgerIcon from "../assets/icons/hamburger.svg";
import BrandLogo from "../assets/logos/brand_logo.png";
import Sidebar from "../components/Sidebar";
import InquiryForm from "../components/InquiryForm";
import SearchOverlay from "../components/SearchOverlay";
import Head from "../Head.astro";

const { pageTitle } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<Head pageTitle={pageTitle} />
	</head>
	<body class="flex flex-col">
		<nav
			class="h-20 flex items-center justify-between bg-[#F0F1F0] fixed top-0 left-0 right-0 z-40 p-4 md:px-8 lg:px-16">
			<a href="/" class="flex gap-1 items-center">
				<img
					src={BrandLogo.src}
					alt="Melanin Accessories Logo"
					class="h-10 md:h-12 w-auto"
				/>
				<div
					class="logo font-bold text-md md:text-xl flex flex-col gap-2">
					<span class="text-primary">MELANIN</span>
					<span class="block ms-2 leading-0 text-black"
						>ACCESSORIES</span
					>
				</div>
			</a>
			<div
				class="hidden md:flex items-center gap-6 lg:gap-12 font-normal">
				<a href="/">HOME</a>
				<a href="/catalog">CATALOG</a>
			</div>
			<div class="hidden md:flex items-center gap-4">
				<button
					class="p-2 rounded-full hover:bg-gray-200 transition-colors cursor-pointer"
					id="search-button">
					<SearchIcon />
				</button>
				<button id="interest-count" class="cursor-pointer">
					MY INTERESTS (0)</button
				>
			</div>
			<div class="md:hidden flex items-center gap-2">
				<button
					id="mobile-interests"
					class="relative cursor-pointer p-2"
					aria-label="My interests">
					<SmileIcon class="w-6 h-6" />
					<span
						id="mobile-interest-badge"
						class="absolute -top-1 -right-1 bg-primary text-white text-xs rounded-full w-5 h-5 flex items-center justify-center font-medium hidden">
						0
					</span>
				</button>
				<button
					id="menu-toggle"
					class="p-2 rounded-full hover:bg-gray-200 transition-colors cursor-pointer"
					aria-label="Toggle menu">
					<HamburgerIcon class="w-6 h-6" />
				</button>
			</div>
		</nav>
	</body><div
		id="mobile-menu"
		class="fixed inset-0 bg-black/50 z-50 hidden md:hidden">
		<div class="bg-[#F0F1F0] h-screen w-4/5 max-w-sm ml-auto p-6">
			<div class="flex justify-end mb-8">
				<button
					id="close-menu"
					class="p-2 rounded-full hover:bg-gray-200 transition-colors">
					<span class="sr-only">Close menu</span>
					<XMarkIcon class="w-6 h-6" />
				</button>
			</div>
			<nav class="flex flex-col gap-6">
				<a href="/" class="text-xl font-medium">HOME</a>
				<a href="/catalog" class="text-xl font-medium">CATALOG</a>
				<button class="text-xl font-medium w-fit" id="mobile-search"
					>SEARCH</button
				>
			</nav>
		</div>
	</div>

	<div class="mt-20">
		<slot />
	</div>

	<footer class="bg-[#F0F1F0] p-4 md:p-8 lg:px-32 font-lexend mt-auto">
		<div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
			<div>
				<h3 class="font-semibold text-lg mb-4">Quick Links</h3>
				<ul class="flex flex-col gap-2">
					<li>
						<a href="/" class="text-gray-600 hover:text-primary"
							>Home</a
						>
					</li>
					<li>
						<a
							href="/catalog"
							class="text-gray-600 hover:text-primary">Catalog</a
						>
					</li>
				</ul>
			</div>
			<div>
				<h3 class="font-semibold text-lg mb-4">Contact Us</h3>
				<ul class="flex flex-col gap-2">
					<li class="text-gray-600">
						<span class="font-medium">Phone:</span>
						<a href="tel:+254712345678" class="hover:text-primary">
							+234 815 828 9001
						</a>
					</li>
					<li class="text-gray-600">
						<span class="font-medium">Location:</span>
						<span>Oyo, Nigeria</span>
					</li>
				</ul>
			</div>
		</div>
		<hr class="border-gray-300 mb-4" />
		<p class="text-sm text-gray-600 text-center">
			&copy; {new Date().getFullYear()} Melanin Accessories. All rights reserved.
		</p>
	</footer>
	<Sidebar client:idle />
	<InquiryForm client:idle />
	<SearchOverlay client:idle />
</html>

<style>
	.logo {
		height: -webkit-fill-available;
		height: -moz-available;
	}

	nav {
		font-family: var(--font-lexend);
	}

	#mobile-menu.active {
		display: block;
	}

	#mobile-menu.active > div {
		transform: translateX(0);
	}
</style>

<script>
	import {
		interests,
		isSearchOverlayOpen,
		isSidebarOpen,
	} from "../store/store";

	const myInterestsButton = document.getElementById("interest-count");
	const mobileInterestsButton = document.getElementById("mobile-interests");
	const mobileBadge = document.getElementById("mobile-interest-badge");
	const mobileMenuBadge = document.getElementById("mobile-menu-badge");

	// Mobile menu elements
	const menuToggle = document.getElementById("menu-toggle");
	const closeMenu = document.getElementById("close-menu");
	const mobileMenu = document.getElementById("mobile-menu");
	const mobileMenuInterests = document.getElementById(
		"mobile-menu-interests"
	);
	const mobileSearchButton = document.getElementById("mobile-search");

	interests.subscribe((value) => {
		const count = Object.keys(value).length;

		// Update desktop interests button
		if (myInterestsButton) {
			myInterestsButton.textContent = `MY INTERESTS (${count})`;
		}

		// Update mobile interests badge
		if (mobileBadge) {
			mobileBadge.textContent = count.toString();
			if (count > 0) {
				mobileBadge.classList.remove("hidden");
			} else {
				mobileBadge.classList.add("hidden");
			}
		}

		// Update mobile menu badge
		if (mobileMenuBadge) {
			mobileMenuBadge.textContent = count.toString();
		}
	});

	// Mobile menu functionality
	function toggleMenu() {
		mobileMenu?.classList.toggle("active");
		document.body.style.overflow = mobileMenu?.classList.contains("active")
			? "hidden"
			: "";
	}

	function closeMenuHandler() {
		mobileMenu?.classList.remove("active");
		document.body.style.overflow = "";
	}

	// Event listeners
	menuToggle?.addEventListener("click", toggleMenu);
	closeMenu?.addEventListener("click", closeMenuHandler);
	mobileMenu?.addEventListener("click", (e) => {
		if (e.target === mobileMenu) closeMenuHandler();
	});

	// Interests buttons
	myInterestsButton?.addEventListener("click", () => {
		isSidebarOpen.set(true);
	});

	mobileInterestsButton?.addEventListener("click", () => {
		isSidebarOpen.set(true);
	});

	mobileMenuInterests?.addEventListener("click", () => {
		closeMenuHandler();
		isSidebarOpen.set(true);
	});

	// Search buttons
	const searchButton = document.getElementById("search-button");
	searchButton?.addEventListener("click", () => {
		isSearchOverlayOpen.set(true);
	});

	mobileSearchButton?.addEventListener("click", () => {
		closeMenuHandler();
		isSearchOverlayOpen.set(true);
	});
</script>
